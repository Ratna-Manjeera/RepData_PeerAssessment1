showMe(p2(20))
showMe(p2(2))
p1
?name <- function(variables) {
}
?rgb
p3<- colorRampPalette(c("blue","green"),.5)
p3<- colorRampPalette(c("blue","green"),alpha = .5)
p3(5)
plot(x,y,pch=19,col=rgb(3,0,.5))
plot(x,y,pch=19,col=rgb(3,0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5))
plot(x,y,pch=19,col=rgb(0,.5,.5), alpha = .3)
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
brewer.pal(3,"BuGn")
cols <- brewer.pal(3, "BuGn")
showMe()
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano,col = pal(20))
image(volcano,col = p1(20))
str(mpg)
qplot(displ,hwy, data = mpg)
qplot(displ,hwy, data = mpg,color = drv)
qplot(displ,hwy, data = mpg,color = drv, genom = c("point", "smooth"))
qplot(displ,hwy, data = mpg,color = drv, geom = c("point", "smooth"))
qplot
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv,hwy, data = mpg, geom = "boxplot")
qplot(drv,hwy, data = mpg, geom = "boxplot",color = manufature)
qplot(drv,hwy, data = mpg, geom = "boxplot",color = manufacture)
qplot(drv,hwy, data = mpg, geom = "boxplot",color = "manufacture")
qplot(drv,hwy, data = mpg, geom = "boxplot",color = "manufacturer")
qplot(drv,hwy, data = mpg, geom = "boxplot",color = manufacturer)
qplot(hwy, data = mpg, aes(drv))
qplot(hwy, data = mpg, aes(fill = drv))
qplot(hwy, data = mpg, fill = drv)
qplot(displ,hwy, data = mpg, facets = .~ drv)
qplot(hwy, data = mpg, facets = drv~.,binwidth = 2)
qplot(displ,hwy, data = mpg,geom = c("point","smooth"), facets = .~drv)
g <- qplot(data = mpg,aes(displ,hwy))
g <- qplot(mpg,aes(displ,hwy))
g <- ggplot(mpg,aes(displ,hwy))
g
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth="lm"
g+geom_point(),geom_smooth="lm"
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(aes("lm")
g+geom_point()+geom_smooth(aes("lm"))
g+geom_point()+geom_smooth(aes("lm"))
g+geom_point()+(aes("lm"))
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,color=drv)
g+geom_point(size=4,alpha=1/2,aes(color=drv)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(size=4,alpha=1/2,aes(color = drv))
g+geom_point(aes(color = drv)+labs(title = "Swirl Rules!")+labs(x=displacement,y="Hwy Mileage")
g+geom_point(aes(color = drv)+labs(title = "Swirl Rules!")+labs(x=displacement,y="Hwy Mileage"))
g+geom_point(aes(color = drv)+labs(title = "Swirl Rules!")+labs(x="displacement",y="Hwy Mileage")
g+geom_point(aes(color = drv)+labs(title = "Swirl Rules!")+labs(x="displacement",y="Hwy Mileage"))
g+geom_point(aes(color = drv)+ labs(title = "Swirl Rules!")+ labs(x="displacement",y="Hwy Mileage"))
g+geom_point(aes(color = ,~drv)+ labs(title = "Swirl Rules!")+ labs(x="displacement",y="Hwy Mileage"))
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") +
| labs(x="Displacement", y="Hwy Mileage")
g + geom_point(aes(color = drv)) + labs(title="Swirl Rules!") +labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+geom_smooth(size=4,lty=3,method = "lm",se = FALSE)
g+geom_point(aes(color=drv))+geom_smooth(size=4,linetype=3,method = "lm",se = FALSE)
g+geom_point(aes(color=drv),size=2,alpha=1/2)+geom_smooth(size=4,linetype=3,method = "lm",se = FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
warning()
plot(myx, myy, type = "l", ylim = c(-3,3))
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x = myx, y = myy))
g+geom_line(0)
g <- ggplot(testdat, aes(x = myx, y = myy))+geom_line(0)
g + geom_line(0)
g + geom_line(aes0)
g
g + geom_line()
g + geom_line()+ylim(-3,3)
g + geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(dataset, aes(x = displ, y = hwy,color = factor(year)))
g <- ggplot(dataset, aes(x = displ, y = hwy,color = factor(year))
g <- ggplot(dataset, aes(x = displ, y = hwy,color = year))
g <- ggplot(dataset, aes(x = displ, y = hwy,color = year))\
g <- ggplot(dataset, aes(x = displ, y = hwy,color = year)
g <- ggplot(dataset, aes(x = displ, y = hwy,color = factor(year))
g
g <- ggplot(dataset, aes(x = displ, y = hwy,color = factor(year)))
g <- ggplot(mpg,aes(x=displ,y=hwy,color=factor(year)))
g + geom_point()
g + geom_point()+facet_grid(drv~cyl,margins = TRUE)
g + geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se = FALSE,size=2,color="black")
g + geom_point()+facet_grid(drv~cyl,margins = TRUE)+geom_smooth(method = "lm",se = FALSE,size=2,color="black")+labs(x="Displacement",y="Highway Mileage",title = "Swirl Rules!")
str(diamonds)
qplot
qplot()
qplot(price,data=diamonds)
qplot(price,data=diamonds)
range(diamonds$price)
qplot(price,data=diamonds,binwidth=18497/30)
brk
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,binwidth=18497/30,fill="cut")
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom = "density")
qplot(price,data=diamonds,geom = "density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut)+geom_smooth("lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth("lm"))
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")+facet=.~cut
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")+facet=.~cut)
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")+facets=.~cut)
qplot(carat,price,data=diamonds, color=cut,facets = .~cut) + geom_smooth(method="lm")
g <- ggplot(diamonds,aes(depth,price)
g <- ggplot(diamonds,aes(depth,price))
g
g <- ggplot(diamonds,aes(depth,price))
summary(g)
g + geom_point(aplha=1/3)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds@carat,seq(0,1,length=4,na.rm = TRUE))
cutpoints <- quantile(diamonds@carat,seq(0,1,length=4,na.rm = TRUE)
cutpoints <- quantile(diamonds@carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints <- quantile(diamonds@carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints <- quantile(diamonds@carat]
cutpoints
cutpoints <- quantile(diamonds@carat]
cutpoints <- quantile(diamonds@carat)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm = TRUE)
cutpoints
cut <- cut(diamonds$carat,cutpoints)
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid(cut~cars)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2))
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
1
1
library(swirl)
swirl()
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(col = h=1.5,"blue")
abline(h=1.5,col = "blue")
cut(.4)
cut()
dendogram
abline(h=1.5,col = "blue")
abline(h=.4,col="red")
5
abline(h=.05,col="red")
abline(h=.08,col="red")
abline(h=.05,col="red")
9
10
11
abline(h=.05,col="red")
8
7
6
12
abline(h=.05,col="green")
dist(dFsm)
hc
heatmap()
heatmap(dataMatrix,cm.colors(25))
heatmap(dataMatrix,col = cm.colors(25))
heatmap(mtcars)
heatmap(mt)
mt
plot(denmt)
distmt
cmat
plot(cx,cy,col = c("red","orange","purple"), pch = 3, cex = 2 , lwd = 2)
points(cx,cy,col = c("red","orange","purple"), pch = 3, cex = 2 , lwd = 2)
mdist()
mdist
mdist(x,y,cx,cy)
apply(distTmp,distTmp2,which.min)
apply(distTmp,distTmp2,which.min(distTmp))
spply
aplly
apply()
apply(distTmp,distTmp2,which.min)
apply(distTmp)
apply(distTmp,2,which.min)
points(x,y,pch = 19, cex = 2,col = cols1[newClust])
tapply(vector, index, function)
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newcx,newcy,col = cols1,pch = 8, cex = 2,lwd = 2)
points(newCx,newCy,col = cols1,pch = 8, cex = 2,lwd = 2)
mdist
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch = 8, cex = 2,col = cols1[newClust2])
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd = 2)
kmeans(dataFrame,centers = 3)
kmObj$iter
kmObj$cluster
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
points(kmobj$centers,col=c("black","red","green"),pch=3,cex=3,lwd = 3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
head(dataMatrix)
heatmap(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
mat(svd())
svd(mat)
mat
matu %*% diag %*% t(matv)
svd(mat)
svd(scale(mat))
prcompscale(mat)
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2
svd2$d
svd2
svd2$v[,1:2]
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] and svd1$d[1])
a1
a1 <- svd1$u, svd1$d
a1 <- (svd1$u[,1]%%svd1$d[1]%%svd$v)
a1 <- svd1$u[,1]%%svd1$d[1]%%svd$v
a1 <- (svd1$u[,1]%%svd1$d[1])%%svd$v
a1 <- svd1$u[,1]%%svd1$d[1]%%svd$v
matu %*% diag %*% t(matv)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
image(myImage())
image()
myImage
myImage(a1)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
ssd
dim(ssd)
ssd
names(ssd[562:563])
table(ssd$ssubject)
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub()
sub1 <- subset(ssd,subject = 1)
sub1 <- subset(ssd,subject == 1)
dim(sub1)
names(sub1)
names(sub1[1:12])
myedit
myedit("showXY.R")
showMe()
showMe(c(16))
showMe(1:6)
mdist <- dist(sub1,x[,1:3])
mdist <- dist(x[,1:3])
mdist <- dist()
mdist <- sub1(X[,1:3])
mdist <- dist(sub1,X[,1:3])
mdist <- dist(sub1,x[,1:3])
mdist <- sub1(x[,1:3])
mdist <- mdist(x[,1:3])
x[,1:3]
mdist <- mdist(x[,1:3])
mdist <- dist(x[,1:3])
mdist <- dist.x[,1:3])
mdist <- dist.x[,1:3]
dist()
x
mdist <- dist(sub1[,1:3])
hclust(mdist)
hclustering <- hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1
svd1 <- svd(scale(sub1[,-c(562,563)]))
svd14U
svd1$U
dim(svd1$u)
maxCon <- which.max(svd1$v)
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kclust
kclust <- kmeans
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6)
table(kClust$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(x$y)
dim(svd1$u)
dim(kClust$centers)
kClust <- kmeans(sub1[, -c(562, 563)], centers = 6, nstart=100)
laying <- which(kClust$size==29)
plot()
plot(kClust$centers[laying,1:12],pch = 19, ylab = "Laying Cluster")
names(sub1[maxCon])
names(sub1[,1:3])
walkdown <- kClust$size==49
walkdown <- which(kClust$size==49)
plot(kClust$centers[laying,1:12],pch = 19, ylab = "Laying Cluster")
plot(kClust$centers[walkdown, 1:12],pch=19,ylab="Walkdown Cluster")
library(swirl)
swirl
swirl()
dim(pm0)
head(pm0)
colnames()
colnames(cnames)
print(cnames)
cnames <- strsplit(cnames,"|",fixed = TRUE)
print(cnames)
make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative
negative(x1<0)
negativex1<0
negative[x1<0[]
negative[x1<0]
negative <- x1<0
sum(negative,na.rm = True)
sum(negative,na.rm = TRUE)
mean(negative,is.rm=TRUE)
mean(negative,na.rm=TRUE)
Date <- pm1$Date
date <- pm1$Date
dates <- pm1$Date
dates
str(dates)
dates <- as.Date(as.caharacter(dates),"%Y%m%d")
dates <- as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both <- intersect
both <- intersect(site0,site1)
both
head(pm0)
cnt0 <- subset(pm0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- sub(cnt0[63])
pm0sub <- sub(cnt0,Country.Code=63,Site.ID= 2008)
pm0sub <-
pm0sub
pm0sub <- subset()
pm0sub <- subset(Country.Code=63,Site.ID= 2008)
pm0sub <- subset(cnt0,Country.Code==63,Site.ID= 2008)
pm0sub <- subset(cnt0,Country.Code==63&Site.ID= 2008)
pm0sub <- subset(cnt0,Country.Code==63&Site.ID2008)
pm0sub <- subset(cnt0,Country.Code==63&Site.ID.2008)
pm0sub <- subset(cnt0,Country.Code==63 & Site.ID.2008)
pm0sub <- subset(cnt0,Country.Code==63 & Site.ID.2008%in%both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm0sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pmosub$Sample.Value
x0sub <- Sample.Value
x0sub <- pmosub$Sample.Value
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
date0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2))
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(date0,x0sub,pch=20)
plot(dates0, x0sub, pch = 20)
abline(lwd=2,median(na.rm = TRUE))
abline(date0,lwd=2,median(na.rm = TRUE))
abline(lwd = 2, median(na.rm = TRUE))
abline(lwd = 2, median(x0sub,na.rm = TRUE))
abline(lwd = 2, median(x0sub),na.rm = TRUE))
abline(lwd = 2, median(x0sub),na.rm = TRUE)
abline(lwd = 2, median(x0sub)
abline(lwd = 2, median(x0sub))
abline(lwd = 2, median(x0sub),na.rm = TRUE)
abline(lwd = 2, median(x0sub,na.rm = TRUE))
abline(lwd=2,median(na.rm = TRUE))
abline(lwd = 2, median(x0sub),na.rm = TRUE)
abline(lwd = 2, median(x0sub,na.rm = TRUE))
abline( "lwd" = 2, median(x0sub,na.rm = TRUE))
abline(lwd = 2, median(x0sub),na.rm = TRUE))
abline(lwd = 2, median(x0sub),na.rm = TRUE)
abline(lwd = 2, median(x0sub)
abline(lwd = 2, median(x0sub))
abline("lwd" = 2, median(x0sub))
abline(lwd = 2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
abline(h = median(x0sub, na.rm = TRUE),lwd=2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm = TRUE)
rng
mn0 <- pm0(tapply(Sample.Value,State.Code))
mn0 <- pm0(tapply(Sample.Value,State.Code))
mn0 <- taply
mn0 <- tapply
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean= mn0)
d1 <- data.frame(state = names(mn1), mean= mn1)
mrd <- merge(d0,d1,"state")
mrd <- merge(d0,d1,by ="state")
mrd <- merge(d0,d1,by = "state")
mrg <- merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg,plot(rep(1,52),mreg[,2],xlim = c(,5,2.5))
with(mrg,plot(rep(1,52),mreg[,2],xlim = c(,5,2.5))0
with(mrg,plot(rep(1,52),mreg[,2],xlim = c(,5,2.5)))
with(mrg,plot(rep(1,52),mreg[,2],xlim = c(,5,2.5)))
with(mrg,plot(rep(1,52),mreg[,2],xlim = c(,5,2.5))
mrd <- merge(d0,d1,by ="state")
mrd <- merge(d0,d1,by ="state")
with(mrg,plot(rep(1,52),mrg[,2],xlim = c(,5,2.5))
with(mrg,plot(rep(1,52),mrg[,2],xlim = c(,5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim = c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3],xlim = c(.5,2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
mrg[mrg$mean.x < mrg$mean.y, ]
get wd
get wd()
wd()
set wd()
get wd()
getwd()
setwd("E:/MOHIT/Coursera/RepData_PeerAssessment1")
file <- read.csv("E:/MOHIT/Coursera/RepData_PeerAssessment1/activity.csv")
head(file)
View(file)
View(file)
